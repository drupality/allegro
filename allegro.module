<?php
/**
* @file
* A description of what your module does.
*/

use Drupal\allegro\Util\AllegroAPI;

/**
 * @param bool $login
 * @param bool $reset
 * @return AllegroAPI|bool
 * @throws \SoapFault
 */
function allegro_client($login = TRUE, $reset = FALSE) {
  if (!$reset) {
    $allegro = &drupal_static(__FUNCTION__);
  }

  if (empty($allegro) || $allegro->logged != $login) {
    try {
      $allegro = new AllegroAPI();
      $credentials = allegro_credentials_object();

      $allegro->userLogin = $credentials->getUsername();
      $allegro->userPassword = $credentials->getPassword();
      $allegro->webapiKey = $credentials->getWebAPIkey();
      $allegro->countryCode = $credentials->getCountryCode();
      $allegro->testMode = $credentials->isTestMode();

      if ($login) {
        $allegro->login();
      }
      else {
        $allegro->init();
      }
    }
    catch (SoapFault $e) {
      allegro_print_soap_error_if_allowed($e);
      drupal_set_message(t('An error occurred while connecting to WebAPI service. Check logs for more information.'), 'error');
      throw $e;
    }
  }

  return !empty($allegro) ? $allegro : FALSE;

}

function allegro_test_connection() {
    $credentials = allegro_credentials_object();
    $username = $credentials->getUsername();
    $pass = $credentials->getPassword();
    $key = $credentials->getWebAPIkey();
    $test_mode = $credentials->isTestMode();
    $country_code = $credentials->getCountryCode();

    if (! ($username && $pass && $key && $country_code)) {
        return false;
    }

    try {
        \Drupal\allegro\Util\AllegroAPI::testConnection($username, $pass, $key, $country_code, $test_mode);
        return true;
    } catch(SoapFault $e) {
        allegro_print_soap_error_if_allowed($e);
        \Drupal::logger('allegro')->warning('Allegro connection error: @message', ['@message' => $e->getMessage()]);
    }
    return false;


}

function allegro_credentials_object() {
  return \Drupal\allegro\Util\AllegroCredentials::get();
}

function allegro_print_soap_error_if_allowed(SoapFault $ex) {
  if (user_access('access site reports')) {
    drupal_set_message($ex->getMessage(), 'error');
  }
}